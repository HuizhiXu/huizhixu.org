<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2023 on 徐慧志的个人博客</title>
    <link>https://huizhixu.github.io/chs/tags/2023/</link>
    <description>Recent content in 2023 on 徐慧志的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>chs</language>
    <lastBuildDate>Sun, 05 Nov 2023 18:31:50 +0800</lastBuildDate><atom:link href="https://huizhixu.github.io/chs/tags/2023/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2023-11-05 你只看见符合自己观念的事例，还是会根据事例更新自己的观念？</title>
      <link>https://huizhixu.github.io/chs/life/20231105%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86/</link>
      <pubDate>Sun, 05 Nov 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20231105%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86/</guid>
      <description>随着年岁的增长，越来越发现世界上有两种人。一种人是这样的，他们对某种事情坚持一种观点，不管世事如何变迁，不管观点带有如何明显的偏激性，他只会选择性地看到支持这种观点的数据。如果他认定AI是不好的，他就只会看到AI对人类有害的例子。比方说AI造成种族歧视、造成生命威胁的时候，他就会跳出来，“你看，AI是多么可怕，我说了吧”。但是AI给人类提供方便的时候，促进生产效率的时候，他就沉默不言，仿佛没有这件事情发生。又比方说地域歧视，特别在上海，能感受到部分上海人对上海周边某个地方的人怀有敌意。如果这个地方的车牌在路上变道没有打转向灯，他们会说，“**人就是不行”。但是如果是别的地方的人没有遵守交通规则，他们就不会下这种判断。
而另一种人，他们会根据自己的经验或者经历来改变对某些事情的看法。假设我们问他们，世界上最好的城市是什么？随着自己的经验增多他们会有不同的答案。世界上最好的咖啡是什么？随着品尝到的咖啡增多，他们的结论有可能会变化。也有部分上海人他们虽然一开始对某地人有不好的看法，但是接触的人多了，他们发现不是这样。
这两种人的不同的地方在于，一种人会根据自己相信的观念去找符合这种观念的事例（我们称之为观测数据），另一种人会根据不同的事例更新自己的观念。
这就是贝叶斯定理的基本内容。贝叶斯定理是一种计算事件发生的概率的方法。它很很神奇，因为它阐释了我们看待事物的基本的原理。
贝叶斯定理有三要素：先验概率、似然和后验概率。
先验知识是指人们对待某件事情的历史经验，例如，假设过去20年里有15年高考的时候都下雨了，那么”高考会下雨“这个先验概率就是0.75。（一般来说都是经验，“估摸着”是多少，这里的0.75是用频率学派的计算方法算出来的。）
似然是指，在已经有”高考会下雨“的观念下，高考下雨这个事件发生的概率。
后验概率是指，在今年高考没有下雨的情况下，自己对”高考会下雨“这一信念的坚持程度。或者在今年高考下雨的情况下，自己对”高考会下雨“这一信念的坚持程度。
在上面的两种人的例子中，先验概率（prior ）就是他们对一些事情最基本的观念。这种观念有可能是父母长辈传授给他们的，也有可能是基于自己的人生经历得到的。在公式中用$P(belief)$表示。
后验概率（posterior）是指，在观察到数据的情况下，自己对信念的坚持程度。在公式中用$P(belief|data)$表示。
似然（likelihood）是指，已经有了信念的情况下，支持这种信念的数据出现的可能性。在公式中用P(data|belief)表示。
$$ P(belief|data) = \frac{P(data|belief)P(belief)}{P(data)} $$
注意，并不是要批评先验知识。
因为先验知识也是基于历史数据得到的。为什么上一辈会有某种观念？因为在他们的人生经历中，某种事例就是发生得很多。为了避免风险，他们形成了某种观念。我在一本书上看到一个小标题“偏见就是力量”，深以为然，“偏见”是我们人类生存的宝贵经验。
这个定理同时也指出，随着更多数据被观测到，先验知识的作用会减小，信念可能会发生变化。当后验概率$P（belief|data）$很小的时候，说明这种信念不足以得到支持了。这时候要考虑另外一种可能性（我们称之为叫备择假设），我们通过计算发现，P（备择假设|data）这个概率很大，可能我们之后的先验知识就变成这个备择假设了。
贝叶斯定理表明，所有人的观念基本上都是一种偏见，都是先验知识。有趣的是人们会不会更改自己的观念。</description>
    </item>
    
    <item>
      <title>2023-10-31 最近用AI干了啥</title>
      <link>https://huizhixu.github.io/chs/life/20231031%E6%9C%80%E8%BF%91%E7%94%A8ai%E5%B9%B2%E4%BA%86%E5%95%A5/</link>
      <pubDate>Tue, 31 Oct 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20231031%E6%9C%80%E8%BF%91%E7%94%A8ai%E5%B9%B2%E4%BA%86%E5%95%A5/</guid>
      <description>总结一下最近用大模型做的事情，还蛮有意思的。
工作上已经离不开 you.com ，基本上每个工作日都会打开它：
a. 询问一些基本操作，例如Pandas操作的数据格式和类型之间的转换。
b. debug 代码错误。一个有意思的观察室，可能是因为知道you.com是聊天的模式，所以在问的时候我会加上上下文，但是谷歌搜索就会直接粘贴Error。
c. 有一些思路，但还是不知道怎么做，会去问一下研究现状。
d. 为什么用you.com而不是openAI自己的网站？因为某些原因我访问openAI要疯狂验证，但是you.com不会。
e. 访问you.com不意味着对谷歌搜索的放弃，事实上他不能完全代替谷歌。
用chatGPT 4 画了聚会的图，整个过程很欢乐。（感谢孙女士的支持~）
四分之二聚会的时候，chatGPT震惊了全世界，当时我用它生成了一首六人聚会的诗。
短短六个月，openAI疯狂迭代。
六个月之后，四分之四聚会的时候，被DALLE的功能吸引，我用它生成了六人聚会的图。 用阿里的faceChain生成了场景图。
9月份拍了婚纱照，对其中某一张图不是很满意，突然在GitHub上看到了faceChain这个repo。为了试一下faceChain的效果，我上传了一张日常照片，并将这章不是很满意的原始婚纱照作为场景。
faceChain将这两张照片结合在一起，生成了一张新的图像。结果证明，生成的图像在除了清晰度方面稍逊一筹外，其他方面都比原始照片效果更好。 当时我是在modelscope提供的算力上跑整个代码的，整个过程很简单，很容易上手。他们最近更新了在线app，应该不用自己手撸代码了。
地址在这：github地址：https://github.com/modelscope/facechain，感兴趣的朋友可以自己试试。
用大模型写评价（1）
中午和同事去了一家川菜馆，点了毛血旺和鸡汁笋丝，菜很好吃。结账的时候服务员说给好评可以打折，要写100字的评价。于是我用大模型生成了好评。如下：
”四川菜馆的毛血旺和鸡汁笋丝真是令人流连忘返！毛血旺的麻辣味道让人回味无穷，每一口都充满了辣椒和香料的浓郁香气，让舌尖仿佛置身于四川的火辣风情之中。其中的各种海鲜、肉类和蔬菜的搭配非常丰富，口感鲜嫩，味道醇厚，简直是美食的极致享受！ 而鸡汁笋丝则是一道清淡爽口的佳肴。鸡肉的鲜嫩与笋丝的脆爽相得益彰，调味恰到好处，让人回味无穷。每一口都让人感受到清新的口感，仿佛沐浴在春天的阳光下。这道菜的独特口味和精致的做工，让人对四川菜的烹饪技艺赞叹不已。 总而言之，在四川菜馆用餐的这次经历令人难以忘怀。毛血旺和鸡汁笋丝的美味让人大饱口福，让人对四川菜的独特魅力更加着迷。推荐给所有喜欢美食的朋友们，一定要去尝尝这里的特色菜品，让你的味蕾得到极致的享受！“
用大模型写评价（2）
婚纱照其实拍得挺不错的，我们很满意。整个过程都给我们很好的体验，最后交付了之后，我用大语言模型生成了好评，自己对细节做了加工，然后发出去了。（不好意思，给点评贡献了两条AI生成的内容。）
使用chatGPT的function calling 和whisper语音控制Notion记录。
这是为了开发公司的一个项目，自己先用Notion进行尝试而做的。主要功能就是用语音模型whisper唤醒Notion，来做记录。Function calling真的很难用，JSON格式的参数一大推乱糟糟的，真的很不优雅。（我不相信这是openAI最后要推行的东西）
试用了AI群里面某个群友开发的大模型AI日程助理，还蛮好用的。
它的使用很简单，用自然语言描述要做的事情，他会记录下来，然后到了那天就会发一个聊天消息来提醒你。差不多可以解放双手。 托公司的福，用上了GitHub Copilot。它真的优缺点都非常明显。
首先，试用了几个礼拜之后，我对Copilot其实不太指望了，因为它的补全是在补全“我写起来毫不费力只需要花点敲代码的时间”的这种代码上完全没有问题，在我也费劲的代码上，它没有什么帮助。
其次，我什么都没写，打了一个# ，马上就出来了这个名字，这表示这段代码其实是来源于这个叫Haochen Zhang的人的？ 不过正如辉哥说的，Copilot在写文档的时候很有用。我也有体会，最近把代码仓库从gitee搬到github，补了一波README，基本上都只用tab和enter键，还是蛮高效的。
还有一些其他的感想：
1. 如果世界变成一个完全由自然语言组成的世界，那该多么可怕啊。伴随着人类社会的发展，出现了各种各样的结构化的事物。这是因为“结构化”这个词对我们是很有利的。理货架、记账本、各种编号、时间刻度等等，它帮助我们理清了大脑无法很快理清的逻辑，让人一目了然。 但是突然，随着大模型的到来，我们居然要回到用自然语言表达而不是用结构化语言表达的世界？ 2. 程序员应该担心自己会被取代吗？ 从大模型一出来，程序员的危机意识拉满，后来发现大模型带来的乐趣远比恐惧多，开始放肆玩了。昨天看了openAI的dev day也，让人感觉自己被取代是分分钟啊，Sam Altman不是说了嘛，要让不会编程的人也能够做出软件。得了，openAI终于实现了某个网站的口号“人人都是产品经理”。 但是取代了会有新的职业产生的呀！ 后来和公司请来给我们做开发分享的人聊天，我发现这种干活很久的人拥有的想法是不一样的，他聊了一下设计原则——这种在我平时想努力写进代码里却经常忘记的东西。因为这个东西，确实是需要经验和审视才能够有的。聊到后来我甚至觉得，代码居然有了一种禅意，一种美感。我相信手艺人的东西不一定比流水线生产出来的好，但是加了一些汗水和心力，也还是会被别人觉察。 </description>
    </item>
    
    <item>
      <title>2023-08-13 Linux回顾</title>
      <link>https://huizhixu.github.io/chs/life/20230813linux%E5%9B%9E%E9%A1%BE/</link>
      <pubDate>Sun, 13 Aug 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230813linux%E5%9B%9E%E9%A1%BE/</guid>
      <description>最近没有那么忙，便回顾了一下Linux方面的知识 ，看看还有什么比较好用的指令。看完第一二章便发现，原来没有什么新鲜的，这里面的指令我在工作中都用过了。不知不觉中，我慢慢地掌握了这些在以前看起来好难的东西。
一开始是什么时候开始用Linux的呢？大概是写毕业论文的时候，要在系里面的cluster跑我的程序。那个时候装个python，装个anaconda都觉得不简单（一般都是助教帮忙装上的），配置个环境心里都有很多疑问，为什么我的kernel不起作用了，为什么要配置路径？配置路径要配置哪个啊？
好不容易配置好环境了，跑程序也经常出问题，broken pipe是一段时间的噩梦。程序运行一次需要的时间贼长，太长了ssh就会断掉。睡觉的时候我的电脑经常通宵亮着跑程序，第二天一起来第一件事就是胆战心惊看服务器有没有断，后来我才知道可以用screen 和tmux在后台运行。
我当时也不懂wget brew pip啥的，看着班上的大神朋友，也不用鼠标点击，在黑黑的屏幕上敲了一些命令，哗哗哗的就出来一堆内容，不禁感叹，真牛啊！
现在这些对于我也完全不是问题了，现在基本每天都会和服务器打交道。接触服务器多了，想要用什么就会去查，就是这样慢慢的学过来的。
不过阅读过程中也有收获，我知道了以前Unix系统曾经用打印机来作为输入输出。现在看起来多么不可思议！</description>
    </item>
    
    <item>
      <title>2023-07-31 NLP资源</title>
      <link>https://huizhixu.github.io/chs/link/20210731nlp%E8%B5%84%E6%BA%90/</link>
      <pubDate>Mon, 31 Jul 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/link/20210731nlp%E8%B5%84%E6%BA%90/</guid>
      <description>视频 Natural Language Processing with Dan Jurafsky and Chris Manning </description>
    </item>
    
    <item>
      <title>2023-07-31 更换博客皮肤</title>
      <link>https://huizhixu.github.io/chs/life/20230731%E6%9B%B4%E6%8D%A2%E5%8D%9A%E5%AE%A2%E7%9A%AE%E8%82%A4/</link>
      <pubDate>Mon, 31 Jul 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230731%E6%9B%B4%E6%8D%A2%E5%8D%9A%E5%AE%A2%E7%9A%AE%E8%82%A4/</guid>
      <description>哈哈哈，我发现我文章没写多少，时间都花在创建/修改/更换博客、博客域名、托管服务器和博客主题上。但不得不说，这个过程真的很有意思啊。
之前博客主题用的是github-styles，它的页面和github一模一样。左边是个人头像和个人信息，右边上面是置顶文章，然后是文章提交热力图，再往下就是文章的时间线，一目了然。它还能切换light/dark模式.
一切都挺好的，但是最近觉得有点不太方便了，因为我想将文章归类存储和搜索，将生活的感想和技术上的总结分开，此外还想加一个英文和德语的界面。
但是还是打算用Hugo，hugo真的是很方便啊，之前不太懂的我也跟着教程做出来了。于是打开Hugo的主题页面开始浏览，看了几个，最后决定用这个叫做blist主题的，它支持multi-lingual，页面也很漂亮。
将主题 git clone到现在的博客之后，按照步骤开始操作，但是没有生效。别着急，一般都不会一次性生效的。
我又重新安装操作了好几遍，并且大胆地删了一些上个主题的遗留的文件夹，但是怎么改动博客都运行不起来了。
于是去github看了一下。发现有两个repo都是和博客相关的。事实上距离上一次折腾博客已经有了一年多了，我早已经忘记为什么要分两个repo了。而且我设置了一个自动化提交，只要运行一个bash文件就可以写文章。
于是我又重新开始看教程，敲敲打打，修修补补。
在这个过程中看到有人吐槽hugo的文档写的不清晰，能够感受到他的愤怒了，哈哈。
Why Hugo&amp;amp;rsquo;s Documentation Sucks 除了看Hugo的文档之外，Hugo论坛hugo discourse 也是很有帮助的。
我最后遇到的问题是，博客在本地启动，页面显示一切正常。但是在域名启动，页面显示就很奇怪，我不懂前端，猜测是部分css文件没有奇效。找了很多答案，都没有改变。最后在这个论坛上提问，很快就有人回答了。太感谢了！
互联网世界的美妙就在于这吧。有超级多的资料可以学习，有前辈程序员写的教程，有各种论坛答疑讨论，有开源仓库的无私奉献。享受这些美好，同时也要不断地帮助别人。
放一个修改前后的对比图：</description>
    </item>
    
    <item>
      <title>2023-07-24 诗歌挽救了我们</title>
      <link>https://huizhixu.github.io/chs/life/20230724%E8%AF%97%E6%AD%8C%E6%8C%BD%E6%95%91%E4%BA%86%E6%88%91%E4%BB%AC/</link>
      <pubDate>Mon, 24 Jul 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230724%E8%AF%97%E6%AD%8C%E6%8C%BD%E6%95%91%E4%BA%86%E6%88%91%E4%BB%AC/</guid>
      <description>前几天发现夏昆老师的《在唐诗里孤独漫步》在微信读书又上线了。我之前订阅了这本书，所以收到了上架的消息提醒。
这本书我之前看过一遍的。在21年的4月份，那时候发现自己很久（有好几年）没有读诗词了。其实在国外，有很多的压力——学习压力工作压力语言压力融入压力，这些压力只想让人努力学习当地国家的语言和文化，找个工作融入当地的环境，最好有native speaker的语言能力，最好有与local people打交道的社交能力。另外国外流行文化很受年轻人的喜欢，新鲜的玩意儿那么多，哪里有时间留给诗词呢？
但是我自己很喜欢诗词的。初中高中的时候，大概是我们频繁接触诗词最多的时候。语文课本里面的诗词和文言文，基本都要求全文背诵。那个时候我也只是按部就班的学习，去尝试理解它的意思，仅此而已。
但是这个过程，留下了痕迹。
当我再一次去读这些诗词的时候，我对作者的人生经历有了更多的了解，也对当时整个社会面貌略知一二，所以知道作者在什么样的背景下写的这首诗词，更能感受到他们想要表达的感情。
这本书将唐诗分为四个部分来讲：初唐，盛唐，中唐，晚唐。
初唐：境界是人生最大的意义 初唐以四杰为代表。
初唐：王勃、杨炯、骆宾王、卢照邻
唐朝以前，流行的是宫体诗，宫体诗的主角只是女人和宫廷。诗人们写楼台亭阁，写宫廷生活，写女性梳妆，从秀发写到裙襦。只因为当时的梁朝太子喜欢，上行下效，于是全国诗歌流行的是这种浮华的风格。
以前的宫体诗是这样的：
丽宇芳林对高阁，新籹艳质本倾城；
映户凝娇乍不进，出帷含态笑相迎，
妖姬脸似花含露，玉树流光照后庭。
这首诗是南陈后主陈书宝的诗，也是最著名的一首宫体诗。辞藻华丽，形象生动。但是想想看，整个社会，吟来吟去，都是这种内容（还写得没这好），未免有些小家子气。
初唐四杰扭转了这样的风气。
他们将目光看向朋友情谊，看向黎民百姓，于是文风也有了很大的变化。
我们熟知的“鹅鹅鹅，曲项向天歌”（《咏鹅》——骆宾王），“海内存知己，天涯若比邻”（王勃）都是这个时期的诗歌。
也出现了表达家国情怀，想建功立业的诗句，例如“宁为百夫长，胜作一书生。”（《从军行》 杨炯）
书里说到，为什么王杨卢骆四人能在浩渺诗海，人才辈出的唐朝占据“初唐四杰”的地位？因为他们扭转了脂粉气的诗歌风气，进入更加广阔的天地。境界是最伟大的意义。王国维先生在《人间词话》里写到：言气质，言神韵，不如言境界，有境界，本业，气质，神韵，末也，有境界而二者随之矣。
盛唐： 盛唐的代表人物：王维、王昌龄、李白、杜甫、孟浩然
作者给每一个盛唐的诗人都洋洋洒洒写了很长的篇幅。
每个人的个性不一样，我最喜欢的诗人是王维，他的诗有禅意，有画面感。读他的诗我的脑海中会立即自动出现一幅画面，我感觉我自己在空山里，看到了月沉，听到了溪水潺潺，听到了空谷回响。而这个画面，就算是最强的AI生成的画面，也无法和我脑子里产生的相比。
我也喜欢李杜的诗歌。李白就不用说了，每个人都会被他的豪迈与气魄感动。盛唐之后一千多年之后的这个暑假，《长安三万里》在热映，大家都还在被他的魅力折服。
但是杜甫的诗，《登高》沉郁顿挫，《茅屋为秋风所破歌》忧国忧民，每次读到都让人揪心——当时的百姓真可怜啊。小时候老师说他是忧国忧民的大诗人。现在想想，他是盛唐诗人啊，盛唐诗人为何会忧国忧民呢？
一可能是是因为杜甫经历了“安史之乱”，唐朝由盛转衰，万物的规律都是这样， “高峰过总会有下坡”。
二可能是因为杜甫本身的特质。尽管他自己生活艰难，但他没有对更苦的人的生活视而不见，这就是一种对人类的大爱。
作者说，“我们的教育，更多的是教孩子做个强人，从智力到能力，从身体到才艺。很多父母给孩子灌输这样的思想：这个社会是个竞争的社会。要不被淘汰，唯一的办法就是淘汰别人。我不禁悲哀地想到：我们的教育，本质上还是“以人为敌”的教育。“
我第一次听到“以人为敌”这个词，但是对这个概念毫不陌生，因为我们就是被这样教育长大的。从小到大每次升学考试都是一次淘汰。我真的希望这个社会能够对人宽容一点。有一天刷微博看到河森宝说，“这个社会容错率太低了，所以大家都以自己的利益为出发点来作为行事方式。“ 如果善意、同情和互相帮助成为了社会的缺失块，那么每个人都是受害者呀。</description>
    </item>
    
    <item>
      <title>2023-07-11 如何应对职场压力</title>
      <link>https://huizhixu.github.io/chs/life/20230711%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E8%81%8C%E5%9C%BA%E5%8E%8B%E5%8A%9B/</link>
      <pubDate>Tue, 11 Jul 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230711%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E8%81%8C%E5%9C%BA%E5%8E%8B%E5%8A%9B/</guid>
      <description>想了好久要不要写这一篇，因为它传述的价值观和人生观和我们（全世界）的教育都有点不一样。而我也是看了才发现，还能这样？（我被驯化太久了）
大家小时候的教育，都是叫我们认真学习，对人有礼貌，尊敬老师，关心同学。
长大了，要认真工作，热爱生活，对人友好（包含孝敬父母、广交朋友），成家立业。
如果上面不能做到，那至少要做到作息规律，不点外卖。
如果还不能做到，那至少态度要做到积极向上。
假设有一个人犯了罪，大家也还是希望他能够改过自新，积极生活。“改过自新”这四个字，就有一种积极的感觉在里面。
这种积极的观念深入人心，使得整个社会在人生态度上的中立面，是倾向积极这方面的。
但是恒子奶奶，一个92岁高龄的日本女士，在书里面传达的是让人更加轻松的人生态度。
书名叫做《宝藏系列：人生通透+活得通透》，微信读书APP有。
1. 在工作中是否有过人际关系的烦恼？
恒子奶奶答：还没有碰过严重的问题。因为我觉得最根本的是，人不要有太多的期望。
比如，“我想如何”，“给我什么”之类的话，尽量不要多说。
无论是职场还是家庭，“只要是别人给予的东西，自己就应该感谢对方”。如果以这样的心态和别人相处，人际关系就不可能出现大问题。
如果在工作生活中埋怨别人不作为，不帮忙，“上司不指导我”，“同事不带我”，认为“下属就该如此”，或者“上司应该这么做”，有这种“别人这样做是理所当然”的想法，那么一定会失落和烦恼。
因为每个人除了职责，他的角色本质是“人”。在现在这个时代，一定要尊重别人的“人”性。
2. 在养育孩子方面，要有“追求家庭和睦”的想法。
其他家庭都这么做，世间大众都这么做，“别人家都去了夏令营/补课/学钢琴，我们家小孩去不了，太焦虑了。”
父母彼此的关系，婆媳关系出现问题，“为什么自己的丈夫不帮忙做家务，孩子成绩不好？为什么别人家都有保姆或者长辈来带小孩？”。
一旦和别人家比较，或者家里发生纠纷、家庭氛围不好，就会影响孩子们的心理状态。维持家庭和睦，放弃“为什么只有自己家这样”的想法，这样焦虑才不会影响孩子们。就算给予不了孩子们太多，但是只要让他们感受到父母在爱护他们，他们依然是有安全感和满足的。
家庭和睦带给孩子人生的裨益更多。
3. 您不认为要通过工作实现自我价值，只要维持生活就可以了吗？
恒子奶奶：是的，我既没有想要出人头地，又不求他人认可。只要完成领导安排的工作，并能获得报酬，我就心满意足了。现在有很多人被“自我实现”的观念所困扰，对他人和自己的要求都很高。
4. 面对性格不合的人或没有礼貌的人，你是否会感到心烦意乱呢？
恒子奶奶：在任何场合都可能碰到没有礼貌或者性格不合的人，我唯一能做的就是保持距离，尽量减少与他们相处。想要改变别人很难，毕竟我也不是什么了不起的人，没有资格要求别人改变。
5. 如果不可避免要经常打交道的同事没有完成任务，您会怎么办？
恒子奶奶：遇到这种情况，我会通过沟通来解决。首先，我会避免使用攻击性语言。比如，”我是这样考虑的，你呢“，”你那样做有什么理由吗“等。
如果确实需要对方改变，可以建议他，”我认为这种方法更好，你可否试着改变一下“，并且需要注意，我们在提出要求时不要指责对方，而是拜托对方。不要从一开始就把对方视为敌人，也不要一味地指责对方，而是在沟通中了解彼此的立场。
6. 有时候朋友越多烦恼越多
恒子奶奶：我认为最好不要跟合不来的人交往。当今时代，社交网络十分发达，人们很容易建立”广而浅“的人际关系，但是人际关系复杂会带来压力。要意识到我们被灌输了”必须拓展人脉，广交朋友“的观念。
有的人不知不觉就成为了朋友，而且交往了很久。
有的人短暂联系，也没有关系。
7. 独处并不丢人，是自然的事情。
有一些人在周末独自度过的时候，在社交网络上看到朋友和别人愉快地吃饭玩耍的照片，于是内心厌恶自己。
实际上，他人如何生活，对我丝毫不重要。有的人虽然朋友众多，表面上很开心，但内心却小心翼翼，局促不安。如果是独自一人，就不必顾忌他人，可以悠闲舒适地度日。
而且，有些人在独处的时候，总想着要做点什么，如果不做点什么，就觉得自己虚度了时光。“必须做什么”这样的想法让人无法享受独处，其实，什么都不用提前计划去做，在独处的过程中想到什么就去做，这样才会感受到自由。
上面就是看书的时候对我很有帮助的认识。
在职场中，我们经常会有期望。我们期待一个良好的环境，老板战略清晰，同事可靠，流程清晰且不冗余，大家能和谐相处。
实际的职场环境里，老板的想法东一榔头西一棒子，同事连简单的任务都完成不好，流程这个东西要么不存在，要么就等上几个月，和同事之间因为利益冲突而勾心斗角。成年人生活在一个这么残忍的环境，怎么会没有压力呢？
而恒子奶奶的这套做法，既不要求自我实现，又对别人没有期待，也不用广交朋友，还能享受独处。这样不仅职场压力没有了，人生压力也没有了，是真正意义上的躺平。
当然，我知道，要相信这些道理是很难的，要完全做到这个也是很难的。有些人志存高远，有些人喜欢热闹。但是它提供了一个保持生活清净的可能性。偶尔我们也需要用这些来宽慰自己。</description>
    </item>
    
    <item>
      <title>2023-03-02 季读——2023年（一）</title>
      <link>https://huizhixu.github.io/chs/life/20230302%E5%AD%A3%E8%AF%BB/</link>
      <pubDate>Fri, 02 Jun 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230302%E5%AD%A3%E8%AF%BB/</guid>
      <description>本来过年的时候想着今年要读一些书，每个月都至少读一本，结果今天发现已经三月份了，我还在读第一本书。
虽然没有读书，但是看了很多别人写的材料，博客，听了很多访谈。当然，主要因为chatGPT的爆火，公众号每天都充斥着关于大模型的知识。 有一些大咖表面上在聊chatGPT，其实是趁机卖自己的课和书；还有一些人觉得这是个绝佳的创业的机会；还有一些号，明明和他八竿子打不着关系，还要硬往上面蹭。
还记得去年冬天，行业加上疫情的原因，一片萧瑟，各大媒体都在唱衰，说是 AI 寒冬，结果过了个年就变成了AI盛世。 也不知道这个热火朝天的劲头能持续多久。
chatGPT会是一个变革性的产品吗？就像信息时代让我们的生活发生翻天覆地的变化那样，人工智能时代也会让我们有完全不同的生活体验吗？ 还很难说。人工智能只是少数人的游戏，因为目前来说，他太昂贵了。 先进的技术带来高效，但是与固有的生产方式相比，它并不一定能省钱。
另外，通过chatGPT，加深了我对认知的重视程度。 一开始我总是在想 openAI 和用户数据之间的关系，想着他们会不会用户输入的数据进行清洗，在此基础上做后续模型升级。 我以为只有花钱用上chatGPT的那些人，他们的数据才是有价值的数据。这种认知就错了。数据永远都是有用的，但是对于每一个组织的作用是不同的。 而openAI不需要去深究这些数据，他们只需要提供接口服务就可以收割全世界。当然他们肯定想做更多。所以认知上的差异，会导致决策差异。
不过，我还有另外一些疑问。机器和人对齐，增强了机器的性能。这其实是仿生学，哪种动物在哪方面做得好，我们就利用这方面，学习这方面。 但是，对于人来说， 我们人类除了学习用文字写出来的知识，我们也学会了一种&amp;quot;上下文&amp;quot;。一个小学生，在学校不仅仅学了加减乘除，也学会了如何和同学打交道，每一件事情的发生都在他身上有影响。 那么机器如何拥有这种能力呢？
推荐我读的一些博客文章：
Why everybody feels like theyr&amp;rsquo;e faking it? https://www.newyorker.com/magazine/2023/02/13/the-dubious-rise-of-impostor-syndrome Fix the machine, not the person by aaron Swartz
http://www.aaronsw.com/weblog/productivity Life in Suburbia: Land of Cliche http://www.aaronsw.com/weblog/suburbia how to work hard http://paulgraham.com/hwh.html 做大事的人除了有天分，还有练习以及时间投入。
《微积分的力量》
里面引用了两段话
I do not remember having felt, as a boy, any passion for mathematics, and such notions as I may have had of the career of a mathematician were far from noble.</description>
    </item>
    
    <item>
      <title>2023-06-02 季读——2023年（二）</title>
      <link>https://huizhixu.github.io/chs/life/20230602%E5%AD%A3%E8%AF%BB/</link>
      <pubDate>Fri, 02 Jun 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230602%E5%AD%A3%E8%AF%BB/</guid>
      <description>今天早上醒来，看到朋友圈大家都在（给娃）庆祝儿童节，发现居然已经到了6月了。想起自己的季读还没写多少。😄
由于行业技术的快速发展，这个季度基本都在一个提高认知、拓宽眼界的技术氛围里。因此，我在这段时间里阅读的大部分文章都与技术有关。
《Prompt Tuning的万字综述》 （https://wjn1996.blog.csdn.net/article/details/120607050） 读了四个多小时，没有全部读完。之前对Prompt Tuning的理解仅仅停留在第三章：如何构建模板，但是到第三章只是入门，后面还有更多的细节。最精髓的就是一句话：prompt的本质是参数有效性学习。
《LLM as Controller 无限拓展LLM的能力边界》（https://zhuanlan.zhihu.com/p/626736120） 作者的抽象能力很强，它描述了LangChain那一套如何运作的，让我很受启发。
它把大模型回答问题的这个过程抽象成一个系统，这个系统只包括LLM和Agent，其中LLM理解输入并且将输入转化成不同的指令，Agent接收指令并行动。假设LLM理解能力很强，100%理解输入的意思，Agent 力量很强，100%能够执行命令。那么，理论上这个LLM+Agent的组合能够做任何事情。
那这样的话，可以进一步缩小空间，问题变成下面两个问题：第一，LLM对输入进行理解之后，转变成怎样的指令，才能被更好地被Agent执行？第二，Agent要去哪里执行指令，才能找到更好的回答？
下面是一些例子，越往下，功能越多，也越难做。这一层一层叠加，真是牛啊~
Visual ChatGPT：单一任务——agent去一些基于视觉的模型里面找答案。
HuggingGPT：多重任务——agent根据不同的输入去不同的模型（基于hf hub）里面找答案。
Toolformer：多重任务——agent的范围更大，是网络上的不同的API（例如谷歌搜索、谷歌翻译）等。
AutoGPT：多重任务——llm和agent能自我迭代。agent会不断反馈，llm根据反馈的答案调整生成更好的指令，形成正向反馈。
《它帮大语言模型消除“幻觉”，一个月内三家向量数据库创业公司获新融资》（https://mp.weixin.qq.com/s/Fhz2O03JkdqZWug2cF7v_A） 为啥大家的目光最近会聚集在向量数据库上面呢？主要是由于大模型的缺陷。
向量数据库是怎么用的呢？以下是一个理解。
假设我们现在有一堆文档，内容是某个保险领域的所有条款。用户提出一些问题，例如，用户问：老人在什么情况下可以投某种保险？我们想要GPT4在这堆文档中找出答案，回答用户。
首先，要知道的是，GPT4输入的token长度是有限制的。大模型只能输入几千个token，但这堆保险文档有几百万个token，大模型它没法一次读啊。
很容易想到，大模型没法一次读，那就拆解让它读多次就好啦~
但是，拆解也是不OK的。主要原因是一，这几百万个token截断之后再拼起来的效果不好。二，太贵了，太慢了。调用GPT4几万次只为回答一个问题，没有人会这么做。
那么就用到向量数据库了。向量数据库会存向量，也是就一堆拥有很多中括号和小数的数值。它一般用来做相似度查找。
我们可以把上面的文档都存在向量数据库里，把用户的问题也转化为向量，然后去搜相似的文本。文本找出来了之后，再传给大模型，让它去分析，给出答案。
这样大模型的输入是不是一下子从百万级变成了万千级，而且向量数据库搜索的效率也很快，所以理论上整个流程就打通了。
这个本地知识库，其实在每个领域都能应用，特别是文本资料很多的法律、保险、金融领域。
但是，向量数据库是一个中间产物。如果我们基于某一个专业领域的大量数据训练了一个大模型，它本身读了很多这个领域的知识，所有的知识点它都了然于心，那么就不需要向量数据库了。或者，如果大模型的输入支持百万、千万数量级的token，也不需要向量数据库了。未来有一天或许能实现呢？
《最早出发的中国大模型创业者：“贫穷限制了我们的想象力”》 这篇文章我读了好多遍，虽然我经历没有周博士那么多，看得没有那么远，但在一些方面也感同身受。还蛮佩服他19年出来创业的，因为后面就是AI寒冬了。那时AI领域像是一潭死气沉沉的冬水，大家发现算法也不是万能的呀，还不如规则和廉价人工好使（狗头）。然后今年，情况明显不一样了，突然变成了so-called ”AI盛世“。但是大模型真的能快速落地吗？
特别是在周博士在的金融领域，有两个限制：一是对结果要求非常准确；二是国内的企业（专指国企央企）有信创的需求。这种情况下，如何去研发大模型，要研发怎样的大模型呢？
他这里面说“贫穷限制了想象力”，在1980年做开发的时候需要考虑节省算力。刚好《黑客与画家》里面也写了“他们在编程的时候需要删去一部分代码，为了节省内存”，但是大模型需要的就是海量数据+超乎想象的算力。
看完文章，我深深地感受到：时代的局限带给单个个体的影响，近乎一种残忍，哪怕是超级有能力的人，也无法跳出禁锢，上一代人没有能力在千亿参数层级去想象，这就已经决定了结果。
《疯狂的幻方：一家隐形AI巨头的大模型之路》（https://mp.weixin.qq.com/s/T-ccVKG_LS4OvUXQIfsoeg） 一家宣称不做垂类和应用，只做研究的公司。钱和算力都有，就是不知道有没有技术，哈哈持怀疑态度。（真羡慕他们的算力啊~ ）
最近的技术变化得实在太快了。在非常tough地学习了一天的新知识之后，精疲力尽地，第二天早上起来，发现又出来新的东西了。而且很有可能，昨天学的过时了。。。
所以，也看了不会过时的文章和书：
《从权力和垄断的演化机制，看投资(一）》 这篇文章的最重要的话就是：
权力斗争的关键就是 i) 在关键环节上，尽可能让自己不可替代。ii) 同时在与自己合作的关键环节上，确保有替代者可互相制约。
这篇文章是纠结要不要跳槽的那时候读的，让我看清了自己在前公司的地位：我的可替代性太强了。这也提醒我了，要去慢慢地构建自己的生态圈。
《软件工程》——李爱萍
《黑客与画家》
这两本书的内容下次写吧。</description>
    </item>
    
    <item>
      <title>2023-05-18 最近觉得很好用的两个AI产品</title>
      <link>https://huizhixu.github.io/chs/life/20230518%E6%9C%80%E8%BF%91%E8%A7%89%E5%BE%97%E5%BE%88%E5%A5%BD%E7%94%A8%E7%9A%84%E4%B8%A4%E4%B8%AAai%E4%BA%A7%E5%93%81/</link>
      <pubDate>Thu, 18 May 2023 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20230518%E6%9C%80%E8%BF%91%E8%A7%89%E5%BE%97%E5%BE%88%E5%A5%BD%E7%94%A8%E7%9A%84%E4%B8%A4%E4%B8%AAai%E4%BA%A7%E5%93%81/</guid>
      <description>第一个产品是ora.ai（之前域名是ora.sh），在这个上面可以创建专业领域的机器人。
ora上面五花八门的机器人都有，解读法律条款的机器人，帮助人们保持心理健康的机器人，图书馆机器人等。
爱学习的我，当然主要是用机器人来学习。刚好最近在学bash语言，于是建了个bash学习机器人。
我分步骤告诉bash机器人，你先给我讲bash的基础知识，然后给我出题，然后批改答案，看我写的对不对，然后给出更好的答案，以及解释他的答案。
基础知识学会了，然后询问他中级语法、高级语法等。bash很容易，三天加起来一共学了没几个小时，差不多就会了。
这里面每一轮操作都都包括下面的环节：(基础|中级|高级)知识学习-&amp;gt;小测验-&amp;gt;批改-&amp;gt;点评我给的答案-&amp;gt;给出自己的答案，并解释答案。 这是很明显的AI改变教育领域的例子，这些步骤已经形成了一个闭环。
然后我又建立了一个FastAPI的机器人。最近换工作了，接手的项目用FastAPI写的，这次接手并没有遇到很难的地方。除了FastAPI本身具有框架简单易读、接口文档有条理测试简单的优点外，FastAPI小助手帮了不少忙。 首先，代码里面有任何不懂的地方，我都会提问，而且是刨根问底地问。其次进行功能拓展的时候，如果写出Bug了，我也会在上面问可能的解决方法。最后，我又把FastAPI的官方文档看了一遍，不懂的也问它。这一次效率明显比去年3月更高了。
Ora调用的是OpenAI的GPT4，它和OpenAI网站上的GPT4相比，有两个优点：
免费 专业领域的小机器人能够让我们更能够集中注意力，专注于某一小块的问题。 在OpenAI网站上，chatgpt的页面开了很多session，用来问不同领域的问题，注意力经常会被分散，Ora则不会出现这个问题。 第二个产品是Call Annie，它的网址是https://callsam.ai/，这个应用自称是大家24小时的AI朋友，大家可以和它打电话闲聊。它很适合所有需要练习口语的小学生，大学生，以及像我这样的职场人。
它最大的优点是能够用国内号码注册。iPhone上可以接通视频，其他设备包括网页端只能接通音频。我比较推荐音频接通，因为视频里面的“真人”不是很“真”。
除了这两款产品之外，还有一些集成工具，例如you.com，poe等。这些都不错，但是我的需求没有那么大，只是偶尔会用一下。</description>
    </item>
    
    <item>
      <title>2021-12-28 两周的深度学习的尝试</title>
      <link>https://huizhixu.github.io/chs/life/20211228%E4%B8%A4%E5%91%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%B0%9D%E8%AF%95/</link>
      <pubDate>Tue, 28 Dec 2021 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20211228%E4%B8%A4%E5%91%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%B0%9D%E8%AF%95/</guid>
      <description>两周的深度学习的尝试 由于项目上我们需要用深度学习的模型来完成一个功能，于是最近两周我又复习了下深度学习的知识。
学习机器学习的课程是17/18年的事情，当时上这门课让我非常suffer。一方面，机器学习代表着高大上的人工智能，让人忍不住探索它为什么这么神奇，于是我花了很多时间去搞懂机器学习到底是在干嘛，AI又是怎么一回事。另一方面，真的非常痛苦。上课时教授轻飘飘的几句话，背后是及其复杂的数学原理和计算，记得这门课的参考书是Pattern Classification，第二章朴素贝叶斯我看了一个月才看懂。而且作业超级多，占分数比又很重，每个周末都和小伙伴在TEL楼写作业写到深夜。
机器学习课程完成之后，我又在Coursera上面做完了吴恩达的那个著名的Deep Learning课程，不过也只是大概有了一个了解，不知道为什么模型能够把图片的特征学会。
总之，我没学懂，也不知道有什么用，苦苦挣扎上完AI相关的几门课，做完毕设，只觉得解脱了，想着再也不想用和概率统计打交道了。
这次重新学习，感受反而不一样了。
首先，觉得现在的AI中文环境真的太好了（也是因为太卷了），基本上涉及AI的所有方面都有人写博文/教程给读者看。
例如这个网站https://zh-v2.d2l.ai/index.html，里面有原理，有三种框架的写法，下面还有讨论。
其次，对机器学习的幻想已经破裂了。这几年AI的发展，和16/17那时候没什么大的进步。以前存在的问题现在还是存在。例如依赖太多标注的数据，泛化能力差，可解释性不强。总的来说，大家都知道AI指望不上了。
再次，我有实际的问题需要解决。所以没有过多看原理，而是直接拿模型用。
既然是工程上的探索，也就是说，没有什么把握，也不知道做不做的出来，也不知道效果符不符合要求。
做工程最重要的先让程序跑起来。
于是，我开始准备了一个很小的数据集。太菜了，做图像标注，搞清楚模型的组成就用了一周。
第二周，领导问我进度，给我推荐了另一个模型。
这次要面对的问题，首先是要弄清楚用回归还是分类做。回归指“在什么程度上是A”，分类解决“是A还是B”。
其次是考虑用文本分类还是图像分类。
再其次是如何标注数据。什么样的数据是有效的。
由于我处理的是文档，所以要么把文本取出来，要么把文档转为图像。这又涉及到特征工程的处理。
还要面临数据不够的情况。
最后这两周，跑的两个模型，一个还可以，一个是负相关。
搜集数据、标注数据、清洗数据、训练模型（包括调参）、部署模型，整个过程枯燥、繁复的嘞。
深度学习比机器学习优秀的地方在于自己不用费尽心思去找特征工程，神经网络自己会学习。</description>
    </item>
    
    <item>
      <title>2021-11-26 接手维保项目</title>
      <link>https://huizhixu.github.io/chs/life/20211126%E6%8E%A5%E6%89%8B%E7%BB%B4%E4%BF%9D%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Fri, 26 Nov 2021 18:31:50 +0800</pubDate>
      
      <guid>https://huizhixu.github.io/chs/life/20211126%E6%8E%A5%E6%89%8B%E7%BB%B4%E4%BF%9D%E9%A1%B9%E7%9B%AE/</guid>
      <description>上上周做了入职三个月的转正述职报告。趁着这个机会总结一下试用期的经历。
8月份“14+7”隔离结束后，我马上就入职了。
我一入职，就接手了一个项目。这个项目开发已经完成，一年维保期限。以前经常看到网上别人吐槽接手项目的事情，吐槽的方面大概就是这几个方面：
没有文档没有文档没有文档！！！（打这句话的时候我内心甚至在咆哮） 代码没有注释。 写代码的工程师已经离职，没有人负责交接，得自己看代码。 在3的条件下，甚至还需要debug或者继续开发。 我接手之后，最崩溃就是没有需求文档和开发文档。一问文档就说没有。没有文字谁知道这个项目是干嘛的呢？我连程序运行的入口都没找到，参数和输入也不知道怎么给，程序能跑起来个鬼。而且由于项目久远，当时负责的工程师已经离职，其他在职的工程师又在其他城市的其他项目上，甚至我入职前两周我的直属领导都在外地出差，但是anyway，我开始开始看代码了。
最初我想着“要把代码的每个细节弄清楚”，哈哈，现在想起来这种决心真是太太太愚蠢了。在第二天第三天看了两天代码而脑海中只有模糊的印象的时候，我就叹气，算了吧，换种方法。
然后我又去知乎上看看大家在接手项目的时候是怎么做的，结果听信了知乎的鬼话想尝试弄清代码中各个类之间的关系，甚至异想天开画出UML类图，尝试了一天后，我又放弃了。先不说这个2017年开始写的项目中间有多少废弃的代码，有多少无人敢动的代码，仅仅是揣摩类的用意，就花掉很多时间，而且有时候觉得这个类应该是这个用途吧，在下一个文件中就狠狠被打脸。好吧，这个也行不通。
没办法呀，我每天就只能按着command，跳到这个这个方法那个类。某一天我正两眼无光百无聊赖地看着代码，最大的头头从身边飘过，问我在看哪个项目，我说了之后，他带着看热闹的语气说：”XX，这可是我们公司的屎山啊，你要是把这个弄懂了，就掌握我们公司的核心了。“我一听这个话就更想放弃了，头头心里明镜似的，我还有何理由苦苦支撑~
后来我差点要躺平的时候，客户爸爸突然在群里反馈说，有个地方出bug了。我没有回复客户的经验，看到客户的反馈心里很慌，于是赶忙和领导说，“这可咋办呀这可咋办呀，代码还看不懂呢，就出bug了！”（言下之意就是不要指望我）还好我们别的项目的同事一把把这个bug修复了，过关。生活又恢复了宁静。
为了下一次客户反馈出现bug的时候我能够独立解决问题，我一逮着同事的空余时间就问他们项目相关的事情。我最幸运的点是，上面值得吐槽的四点中，第三点没发生。和我交接的同事，一个在北京，一个在宁波，我领导在杭州，我每天一日三次乖巧地问候，问他们有没有时间，能不能约个腾讯会议聊聊，心里想着反正能讲一点是一点嘛，就算讲到个项目无关的话题，也是对公司多了解一分。记得一个同事的排期满到只能周六给我答疑，但是就算是周六我心里也是万分感激的，居然有这种愿意牺牲自己周末的时间的同事，我哪里会不满意呢。
在他们的帮助之下，我成功地将代码在本地跑起来了（可费了九牛二虎之力啊！）后来又收到客户的bug反馈了。这下我可不好再麻烦其他同事debug啦，因为他们也确实很忙。领导给我建议，让我不要管这个项目的大的方面的功能，只需着眼于”什么地方出现了问题，为什么出现了问题，怎么解决“这些方面即可。
我采纳了他的建议，也不再烦恼这个项目有多少我看不懂的代码了，解决了问题就okay。拉了分支，修复了bug，请求merge，merge完成我的任务也就完成了。（ 按理来说修复完bug要跑一遍测试用例的，但是这个项目里测试也是另一个坑，虽然我以前是做测试的，但是明显我也不知道在没有测试用例的情况下要怎么测，就没管了。）
总之，这个维保项目持续了三周，算是有了一个对项目的基本的了解吧。虽然压力不大，但是我非常盼望着自己能够去真正的项目上，体验一把整个项目是怎么运行的，能debug自己写的代码，同时期盼自己一定要做一个写文档（黑体加粗）的工程师。</description>
    </item>
    
  </channel>
</rss>
